import Head from "next/head";
import Layout from "../components/layout";

const Event = () => {
  let begining, hourBegining, end, hourEnd, title, details, nbParticipants, participantBool, author;




  /*
  let glasses, degree, timeSinceDrink, weight, sex;
  let result;

  const handleSubmit = (event) => {
    event.preventDefault();
    console.log([glasses, degree, timeSinceDrink, sex, weight]);

    // Change the name of the sex to its corresponding factor
    switch (sex) {
      case "femme":
        sex = 0.6;
        break;
      case "homme":
        sex = 0.7;
        break;
      case "autre":
        sex = 0.75;
        break;
    }

    // le 125 c'est parce que je suppose qu'un verre fait 125 mL
    result = (degree * 0.01 * glasses * 125 * 0.8) / (sex * weight);

    // NB : le pic est atteint environ 15min après à jeûn et jusqu'à 1h après si on est en train de manger. On suppose que c'est 30min pour tout le monde

    const resultDiv = document.getElementById("result");
    resultDiv.innerHTML = `Ton taux d'alcoolémie est de ${(
      Math.round((result - (0.2 * timeSinceDrink) / 60) * 100) / 100
    ).toFixed(2)} g/L`;
  };
  */

  return (
    <Layout>
      <Head>
        <title>GazeEDIfication</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicon-32x32.png"
        />
      </Head>
      <main>
        <a href="/index">
          <button type="button" className="btn inner_button m-3 left">
            Retour
          </button>
        </a>

        <div className="container">
          <div style={localStyles.container}>
          <form style={localStyles.container} action="form" method="post">
          <div className="form-group row" style={localStyles.fieldContainer}>
              <label
                htmlFor="inputDay"
                className="col-m-5 col-form-label modal-label"
              >
                Jour de l'évènement
              </label>
              <div className="col-sm-5 modal-input">
                <select
                  id="inputDay"
                  className="form-select bierasse_form"
                  aria-label="Default select example"
                >
                  <option value="Lundi">Lundi</option>
                  <option value="Mardi">Mardi</option>
                  <option value="Mercredi">Mercredi</option>
                  <option value="Jeudi">Jeudi</option>
                  <option value="Vendredi">Vendredi</option>
                  <option value="Samedi">Samedi</option>
                  <option value="Dimanche">Dimanche</option>
                </select>
              </div>
            </div>

            <div className="form-group row" style={localStyles.fieldContainer}>
              <label
                htmlFor="inputEventBegining"
                className="col-m-2 col-form-label modal-label"
              >
                Début de l'évènement
              </label>
              <div className="col-sm-8 modal-input">
                <input
                  type="date"
                  pattern="[0-9,.]+"
                  className="form-control"
                  id="inputEventBegining"
                  onChange={(input) => {
                    begining = input.target.value;
                    document
                      .getElementById("inputEventBegining")
                      .setAttribute("value", begining);
                  }}
                ></input>
              </div>
            </div>

            <div className="form-group row" style={localStyles.fieldContainer}>
              <div className="col-m-30 modal-input">
                <label
                  htmlFor="inputEventHourBegining"
                  className="col-sm-25 col-form-label modal-label"
                >
                  Heure de début
                </label>
                <input
                  type="time"
                  pattern="[0-9,.]+"
                  className="form-control"
                  id="inputEventHourBegining"
                  min={"00:00"}
                  max={"23:59"}
                  onChange={(input) => {
                    hourBegining = input.target.value;
                    console.log(typeof(hourBegining));
                    document
                      .getElementById("inputEventHourBegining")
                      .setAttribute("value", hourBegining);
                  }}
                ></input>
              </div>
            </div>

            <div className="form-group row" style={localStyles.fieldContainer}>
              <label
                htmlFor="inputEventBegining"
                className="col-m-2 col-form-label modal-label"
              >
                Fin de l'évènement
              </label>
              <div className="col-sm-8 modal-input">
                <input
                  type="date"
                  pattern="[0-9,.]+"
                  className="form-control"
                  id="inputEventEnd"
                  onChange={(input) => {
                    end = input.target.value;
                    document
                      .getElementById("inputEventEnd")
                      .setAttribute("value", end);
                  }}
                ></input>
              </div>
            </div>

            <div className="form-group row" style={localStyles.fieldContainer}>
              <div className="col-m-30 modal-input">
                <label
                  htmlFor="inputEventHourEnd"
                  className="col-sm-25 col-form-label modal-label"
                >
                  Heure de fin
                </label>
                <input
                  type="time"
                  pattern="[0-9,.]+"
                  className="form-control"
                  id="inputEventHourEnd"
                  min={"00:00"}
                  max={"23:59"}
                  onChange={(input) => {
                    hourEnd = input.target.value;
                    console.log(hourEnd);
                    document
                      .getElementById("inputEventHourEnd")
                      .setAttribute("value", hourEnd);
                  }}
                ></input>
              </div>
            </div>

            <div className="form-group row" style={localStyles.fieldContainer}>
              <div className="col-sm-25 modal-input">
                <input
                  type="text"
                  pattern="[0-9,.]+"
                  className="form-control"
                  id="inputEventTitle"
                  placeholder="Titre de l'évènement"
                  onChange={(input) => {
                    title = input.target.value;
                    document
                      .getElementById("inputEventTitle")
                      .setAttribute("value", title);
                  }}
                ></input>
              </div>
            </div>

            <div className="form-group row" style={localStyles.fieldContainer}>
              <div className="col-sm-25 modal-input">
                <input
                  type="text"
                  pattern="[0-9,.]+"
                  className="form-control"
                  id="inputEventDetails"
                  placeholder="Détails (organisateur, lieu, dresscode, etc.)"
                  onChange={(input) => {
                    details = input.target.value;
                    document
                      .getElementById("inputEventDetails")
                      .setAttribute("value", details);
                  }}
                ></input>
              </div>
            </div>
      </form>
    </div>
      
    </div>
      </main>
    </Layout>
  );
};

const localStyles = {
  container: {
    minHeight: "70vh",
    minWidth: "900px",
    justifyContent: "center",
    alignItems: "center",
    display: "flex",
    flexDirection: "column",
  },
  fieldContainer: {
    marginBottom: 2,
  },
  label: {
    display: "flex",
  },
  centered: {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
  },
  result: {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    flexDirection: "column",
    paddingTop: 20,
    borderRadius: 10,
    minHeight: "10vh",
    minWidth: "10vw",
  },
};

export default Event;
